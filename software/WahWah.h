/**********************************************************
   Wah-Wah Effect Class

   Interface for the Wah-Wah Effect.There is no GUI for
   this effect. It is controlled entirely by the front
   panel wah-wah pot.
   Wah-wah is generated by passing the audio through a filter
   that....

    Version 2.0     18Jan2020

   Audio chain:
   I2SIn -> Mixer5 -> Filter1 -> Mixer1 -> Mixer3 -> I2SOut
                       ^
   DC2 ----------------|


*************************************************************/

#include "guiItems.h"


extern Encoder paramEncoder;
extern Encoder valueEncoder;



class WahWah {
  public:
    WahWah();
    void init();
    void disable();
    void enable();
    void toggle();
    bool getStatus();
    void printConfig();
    void setValue(int);
    void update(int);
    bool enabled;

  private:
    const int WAH_WAH_CENTER_FREQ = 500;
    const int WAH_WAH_GAIN        = 4;
    const int WAH_WAH_OCTAVES     = 2;  // +/- 2 octaves
};



// this is run before audio board is initialized
WahWah :: WahWah()
{
  // nothing to do
}



// run after audio board is initialized
void WahWah :: init()
{
  // Wah-Wah filter params
  filter1.frequency(WAH_WAH_CENTER_FREQ);  //  filter center frequency
  filter1.resonance(WAH_WAH_GAIN);
  filter1.octaveControl(WAH_WAH_OCTAVES); // +/- 2 octaves over pedal range

  disable();
  printValue("Wah-Wah initialized");
}




void WahWah :: disable()
{
  // set volume to 0 on effects mixer
  mixer8_1.gain(WAH_WAH_IN, 0);
  enabled = false;
  printValue("WahWah disabled");
}



void WahWah :: enable()
{
  // enable mixer channel
  mixer8_1.gain(WAH_WAH_IN, 1.0);
  enabled = true;
  printValue("WahWah enabled");
}


void WahWah :: toggle()
{
  if (enabled)
    disable();
  else
    enable();
}


void WahWah :: setValue(int value)
{
  update(value);
}



bool WahWah :: getStatus()
{
  return enabled;
}


void WahWah :: printConfig()
{
  Serial.print("Wah-Wah Center Freq = "); Serial.println(WAH_WAH_CENTER_FREQ);
  Serial.print("Wah-Wah Gain        = "); Serial.println(WAH_WAH_GAIN);
  Serial.print("Wah-Wah Octaves     = "), Serial.println(WAH_WAH_OCTAVES);
  Serial.print("WahWah Enabled      = "); Serial.println(enabled);
}



// does the actual changes to the audio board
void WahWah :: update(int pot)
{
  // scale from -1.0 to +1.0 and set dc source
  float val = -1.0 + ((float)pot / 512.0);
  val = constrain(val, -1.0, 1.0);
  dc2.amplitude(val);

  if (enabled)
    enable();
  else
    disable();

  printValue("WahWah Settings Updated");
}
